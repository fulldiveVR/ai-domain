syntax = "proto3";

package ai_wayz;

option go_package = "github.com/ai-domain/ai-workers/v1/types";

import "google/protobuf/struct.proto";
import "google/protobuf/any.proto";

service AiWayZService {
  rpc Complete(CompletionRequestMessage) returns (CompletionResponseMessage) {}
  rpc ChatComplete(ChatCompletionRequestMessage) returns (CompletionResponseMessage) {}
  rpc CompleteStream(CompletionRequestMessage) returns (stream CompletionResponseMessage) {}
  rpc ChatCompleteStream(ChatCompletionRequestMessage) returns (stream CompletionResponseMessage) {}

  rpc GetEmbedding(EmbeddingRequestMessage) returns (EmbeddingResponseMessage) {}

  rpc CreateThread(CreateThreadRequest) returns (ThreadResponse) {}
  rpc RetrieveThread(RetrieveThreadRequest) returns (ThreadResponse) {}
  rpc ModifyThread(ModifyThreadRequest) returns (ThreadResponse) {}
  rpc DeleteThread(DeleteThreadRequest) returns (ThreadDeleteResponse) {}
}

// Open ai

message CompletionRequestMessage {
  string prompt = 1;
  optional float temperature = 2;
  optional int32 max_response_tokens = 3;
  optional AiModel model = 4;
}

message ChatCompletionRequestMessage {
  repeated ChatMessage messages = 1;
  optional float temperature = 2;
  optional int32 max_response_tokens = 3;
  optional AiModel model = 4;

  repeated ChatCompletionFunction functions = 5;
  oneof funciton_call {
    bool none = 6;
    string function_name = 7;
  };
}

message CompletionResponseMessage {
  message FunctionCall {
    optional string name = 1;
    optional string arguments = 2;
  }

  string text = 1;
  int32 used_tokens = 2;
  string model = 3;

  // The function call that was made or it's delta if streaming
  // If no functions were configured, this always will be empty
  // and all stream frames will contain non-empty "text" field
  optional FunctionCall function_call = 4;
}

message AiModel {
  string name = 1;
  int32 max_tokens = 2;
}

message ChatMessage {
  ChatMessageRole role = 1;
  string content = 2;
}

message ChatCompletionFunction {
  string name = 1;
  optional string description = 2;
  optional google.protobuf.Struct parameters = 3;
}

enum ChatMessageRole {
  system = 0;
  user = 1;
  assistant = 2;
  function = 3;
}

message EmbeddingRequestMessage {
  string prompt = 1;
}

message EmbeddingResponseMessage {
  repeated float embedding = 1;
}


message ThreadMessage {
  string role = 1;
  string content = 2;
  repeated string file_ids = 3;
  map<string, google.protobuf.Any> metadata = 4;
}

message CreateThreadRequest {
  repeated ThreadMessage messages = 1;
  map<string, google.protobuf.Any> metadata = 2;
}

message ThreadResponse {
  string id = 1;
  string object = 2;
  int64 created_at = 3;
  map<string, google.protobuf.Any> metadata = 4;
}

message RetrieveThreadRequest {
  string id = 1;
}

message ModifyThreadRequest {
  map<string, google.protobuf.Any> metadata = 1;
}

message DeleteThreadRequest {
  string id = 1;
}

message ThreadDeleteResponse {
  string id = 1;
  string object = 2;
  bool deleted = 3;
}

// Readability

message ReadabilityContentFetcherRequestMessage {
  string url = 1;
}

message ReadabilityContentFetcherResponseMessage {
  string content = 1;
  string title = 2;
  string author = 3;
  string image = 4;
}

// Image generator

message GenerateImageRequestMessage {
  string prompt = 1;
}

message GenerateImageResponseMessage {
  string url = 1;
}

message UpscaleImageRequestMessage {
  string prompt = 1;
  int32 index = 2;
}

message UpscaleImageResponseMessage {
  string url = 1;
}